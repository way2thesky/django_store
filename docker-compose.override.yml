#version: "3.8"
#
#services:
#
#  db:
#    container_name: db
#    build:
#      context: .
#      dockerfile: docker/store/Dockerfile
#    image: postgres
#    restart: on-failure
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    expose:
#    - 5432
#    environment:
#      POSTGRES_DB: 'dbshop'
#      POSTGRES_USER: 'postgres'
#      POSTGRES_PASSWORD: 'postgdb'
#  web:
#    command: bash -c "python manage.py migrate &&
#                      python manage.py runserver 0.0.0.0:8000"
#    volumes:
#      - .:/usr/src/warehouse_store
#    ports:
#      - 8000:8000
#    depends_on:
#      - db
#volumes:
#  postgres_data:

version: "3.8"

services:
  db:
    container_name: db
    image: postgis/postgis:12-master
    restart: on-failure
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - webnet
    expose:
      - 5432
    environment:
      POSTGRES_DB: 'dbshop'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgdb'

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  db-data: